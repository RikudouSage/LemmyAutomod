# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.lemmy.user: '%env(LEMMY_USER)%'
    app.lemmy.password: '%env(LEMMY_PASSWORD)%'
    app.lemmy.instance: '%env(LEMMY_INSTANCE)%'
    app.lemmy.auth_mode: '%env(int:LEMMY_AUTH_MODE)%'

    app.lemmy.notify_users: '%env(csv:LEMMY_USERS_TO_NOTIFY)%'
    app.notify.new_users: '%env(bool:ENABLE_NEW_USERS_NOTIFICATION)%'
    app.notify.first_post_comment: '%env(bool:ENABLE_FIRST_POST_COMMENT_NOTIFICATION)%'
    app.notify.reports: '%env(bool:ENABLE_REPORT_NOTIFICATIONS)%'

    app.notify.slack.token: '%env(SLACK_BOT_TOKEN)%'
    app.notify.slack.channels: '%env(csv:SLACK_CHANNELS)%'
    app.notify.slack.lemmyverse_link: '%env(bool:USE_LEMMYVERSE_LINK_SLACK)%'

    app.notify.matrix.token: '%env(MATRIX_API_TOKEN)%'
    app.notify.matrix.rooms: '%env(csv:MATRIX_ROOM_NAMES)%'
    app.notify.matrix.instance: '%env(MATRIX_INSTANCE)%'
    app.notify.matrix.lemmyverse_link: '%env(bool:USE_LEMMYVERSE_LINK_MATRIX)%'

    app.notify.lemmy.lemmyverse_link: '%env(bool:USE_LEMMYVERSE_LINK_LEMMY)%'

    app.fediseer.api: '%env(FEDISEER_API_URL)%'
    app.fediseer.key: '%env(FEDISEER_API_KEY)%'

    app.image_check.regex: '%env(IMAGE_CHECK_REGEX)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.lemmy.version:
        class: Rikudou\LemmyApi\Enum\LemmyApiVersion
        factory: [Rikudou\LemmyApi\Enum\LemmyApiVersion, from]
        arguments:
            - 'v3'

    Rikudou\LemmyApi\LemmyApi:
        class: Rikudou\LemmyApi\DefaultLemmyApi
        factory: ['@App\Service\LemmyApiFactory', 'createApi']
        arguments:
            - '%app.lemmy.auth_mode%'

    Bref\Symfony\Messenger\Service\Sqs\SqsConsumer:
        public: true
        autowire: true
        arguments:
            # Pass the transport name used in config/packages/messenger.yaml
            $transportName: 'async'
            $partialBatchFailure: true

    League\CommonMark\CommonMarkConverter:

    SapientPro\ImageComparator\ImageComparator:

    app.log_validity:
        class: DateInterval
        factory: [App\Service\RemovalLogValidityFactory, createLogValidity]
        arguments:
            - '%env(REMOVAL_LOG_VALIDITY)%'

    App\MessageHandler\RemoveCommentHandler:
        arguments:
            $removalLogValidity: '@app.log_validity'
    App\MessageHandler\RemovePostHandler:
        arguments:
            $removalLogValidity: '@app.log_validity'
    App\MessageHandler\UnbanUserHandler:
        arguments:
            $removalLogValidity: '@app.log_validity'

    App\Service\ExpressionLanguage:
        calls:
            - registerProvider: ['@App\Service\ExpressionLanguageFunctions']
    Symfony\Component\ExpressionLanguage\ExpressionLanguage: '@App\Service\ExpressionLanguage'
